// src/pages/DashboardPage.tsx
import React, { useState, useEffect } from 'react';
import '@/css/DashboardPage.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏
import ChatWindow from '../components/ChatWindow';

const DashboardPage: React.FC = () => {
  const [isChatOpen, setIsChatOpen] = useState(false);

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ —á–∞—Ç–∞
  const handleClickOutside = (e: MouseEvent) => {
    const chatWindow = document.querySelector('.chat-window');
    
    if (chatWindow && !chatWindow.contains(e.target as Node)) {
      setIsChatOpen(false);
    }
  };

  // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è/–æ—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –æ—Ç —Å–æ–±—ã—Ç–∏—è
  useEffect(() => {
    if (isChatOpen) {
      document.addEventListener('mousedown', handleClickOutside);
    }

    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [isChatOpen]);
  
  return (
    <div className="dashboard-container">
      {/* –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∏–∫–æ–Ω–∫–∞–º–∏ */}
      <footer className="dashboard-footer">
        <button className="dashboard-icon settings" title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏">
          ‚öôÔ∏è
        </button>
        <button className="dashboard-icon news" title="–ù–æ–≤–æ—Å—Ç–∏">
          üì∞
        </button>
        <button className="dashboard-icon apps" title="–°–ø–∏—Å–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π">
          üíæ
        </button>
      </footer>

      {/* –ò–∫–æ–Ω–∫–∞ —á–∞—Ç–∞ –Ω–∞ –ø—Ä–∞–≤–æ–º –∫—Ä–∞–µ */}
      <button
        className="chat-icon"
        title="–ß–∞—Ç—ã"
        onClick={() => setIsChatOpen((prev) => !prev)}
      >
        üí¨
      </button>

      {/* –û–∫–Ω–æ —á–∞—Ç–æ–≤ */}
      {isChatOpen && <ChatWindow onClose={() => setIsChatOpen(false)} />}
    </div>
  );
};

export default DashboardPage;
// src/pages/DashboardPage.tsx

import React, { useState, useEffect } from 'react';
import '@/css/DashboardPage.css';
import ChatWindow from '../components/ChatWindow';
import GroupsWindow from '../components/GroupsWindow';
import SettingsModal from '../components/SettingsModal'; // ‚Üê –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç

const DashboardPage: React.FC = () => {
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [isGroupsOpen, setIsGroupsOpen] = useState(false);
  const [isSettingsOpen, setIsSettingsOpen] = useState(false);

  const [groupWidth, setGroupWidth] = useState(() => Math.max(window.innerWidth * 0.3, 250));
  const getDefaultChatWidth = () => Math.max(window.innerWidth * 0.3, 300);
  const [chatWidth, setChatWidth] = useState(getDefaultChatWidth());

  useEffect(() => {
    const handleResize = () => {
      setChatWidth(getDefaultChatWidth());
    };
    if (isChatOpen) {
      window.addEventListener('resize', handleResize);
    }
    return () => window.removeEventListener('resize', handleResize);
  }, [isChatOpen]);

  return (
    <div className="dashboard-container">
      {/* –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∏–∫–æ–Ω–∫–∞–º–∏ */}
      <footer className="dashboard-footer">
        <button
          className="dashboard-icon settings"
          title="–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
          onClick={() => setIsSettingsOpen(true)}
        >
          ‚öôÔ∏è
        </button>
        <button className="dashboard-icon news" title="–ù–æ–≤–æ—Å—Ç–∏">üì∞</button>
        <button className="dashboard-icon apps" title="–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è">üíæ</button>
      </footer>

      {/* –ò–∫–æ–Ω–∫–∞ —á–∞—Ç–æ–≤ —Å–ø—Ä–∞–≤–∞ */}
      <button
        className="chat-tab"
        title={isChatOpen ? '–°–∫—Ä—ã—Ç—å —á–∞—Ç—ã' : '–ß–∞—Ç—ã'}
        onClick={() => setIsChatOpen((v) => !v)}
        style={{
          right: isChatOpen ? `${chatWidth}px` : 0,
          top: '50%',
          transform: 'translateY(-50%)',
          zIndex: 1002,
          '--chat-width': `${chatWidth}px`,
        } as React.CSSProperties}
      >
        üí¨
      </button>

      {/* –û–∫–Ω–æ —á–∞—Ç–æ–≤ */}
      <ChatWindow
        onClose={() => setIsChatOpen(false)}
        chatWidth={chatWidth}
        setChatWidth={setChatWidth}
        isOpen={isChatOpen}
      />

      {/* –ò–∫–æ–Ω–∫–∞ –≥—Ä—É–ø–ø —Å–ª–µ–≤–∞ */}
      <button
        className="groups-tab"
        title={isGroupsOpen ? '–°–∫—Ä—ã—Ç—å –≥—Ä—É–ø–ø—ã' : '–ì—Ä—É–ø–ø—ã'}
        onClick={() => setIsGroupsOpen((v) => !v)}
        style={{
          left: isGroupsOpen ? `${groupWidth}px` : 0,
          top: '50%',
          transform: 'translateY(-50%)',
          zIndex: 1001,
          '--group-width': `${groupWidth}px`,
        } as React.CSSProperties}
      >
        üë•
      </button>

      {/* –û–∫–Ω–æ –≥—Ä—É–ø–ø */}
      <GroupsWindow
        onClose={() => setIsGroupsOpen(false)}
        groupWidth={groupWidth}
        setGroupWidth={setGroupWidth}
        isOpen={isGroupsOpen}
      />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
      {isSettingsOpen && <SettingsModal onClose={() => setIsSettingsOpen(false)} />}
    </div>
  );
};

export default DashboardPage;
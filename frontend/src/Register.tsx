import React, { useState } from 'react';
import './Register.css';
import { useNavigate } from 'react-router-dom';

const Register: React.FC = () => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [confirmPassword, setConfirmPassword] = useState('');
    const [error, setError] = useState<string | null>(null);

    const navigate = useNavigate();

    const API_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000';

    const handleSubmit = async (e: React.FormEvent) => {
        console.log('‚úÖ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è...');
        e.preventDefault();
        setError(null);

        if (password !== confirmPassword) {
            setError('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
            return;
        }

        try {
            console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞:', `${API_URL}/api/v1/auth/register`);
            const response = await fetch(`${API_URL}/api/v1/auth/register`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    email,
                    password,
                    password_confirm: confirmPassword,
                }),
            });

            console.log('üì• –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç. –°—Ç–∞—Ç—É—Å:', response.status);

            if (!response.ok) {
                const errData = await response.json().catch(() => ({}));
                throw new Error(errData.detail || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
            }

            const data = await response.json();
            console.log('üéâ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', data);
            navigate('/dashboard'); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        } catch (err: any) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', err);
            setError(err.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è');
        }
    };

    return (
        <div className="register-container">
            <h1 className="welcome-text">–†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø</h1>

            {/* –¢–µ—Å—Ç–æ–≤–∞—è –º–µ—Ç–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–Ω–¥–µ—Ä–∞ */}
            <p style={{ color: '#ccc', fontSize: '12px' }}>–§–æ—Ä–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞</p>

            <form onSubmit={handleSubmit} className="register-form">
                {error && <p className="error-message">{error}</p>}

                {/* –ü–æ—á—Ç–∞ */}
                <div className="input-group">
                    <label className="label">–ü–æ—á—Ç–∞</label>
                    <input
                        type="email"
                        className="input-field"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        required
                    />
                </div>

                {/* –ü–∞—Ä–æ–ª—å */}
                <div className="input-group">
                    <label className="label">–ü–∞—Ä–æ–ª—å</label>
                    <input
                        type="password"
                        className="input-field"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        required
                    />
                </div>

                {/* –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è */}
                <div className="input-group">
                    <label className="label">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å</label>
                    <input
                        type="password"
                        className="input-field"
                        placeholder="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                        value={confirmPassword}
                        onChange={(e) => setConfirmPassword(e.target.value)}
                        required
                    />
                </div>

                {/* –ö–Ω–æ–ø–∫–∞ —Å —è–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π onClick */}
                <button
                    type="submit"
                    className="next-button"
                    onClick={() => console.log('üîµ –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –Ω–∞–∂–∞—Ç–∞')}
                >
                    –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                    <i className="arrow-icon">&#8594;</i>
                </button>
            </form>
        </div>
    );
};

export default Register;
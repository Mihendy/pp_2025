// src/App.tsx

import React, { useState } from 'react';
import './css/App.css';
import { Link, useNavigate } from 'react-router-dom';

// üîê –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
import type { LoginRequest } from '@/types/auth.types';
import { loginUser } from '@/api/authApi';
import { useAuth } from '@/hooks/useAuth';

const App: React.FC = () => {
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [error, setError] = useState<string | null>(null);
    const [isLoading, setIsLoading] = useState<boolean>(false);

    const navigate = useNavigate();

    // üß™ –£–±—Ä–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –≤—Ö–æ–¥ ‚Äî —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ API
    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        setError(null);
        setIsLoading(true);

        const data: LoginRequest = { email, password };

        try {
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö:', data);
            const result = await loginUser(data); // üî• –†–µ–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ –±—ç–∫–µ–Ω–¥—É
            console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:', result);

            localStorage.setItem('access_token', result.access_token);
            localStorage.setItem('refresh_token', result.refresh_token);

            navigate('/dashboard');
        } catch (err: any) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err.message);
            setError(err.message || '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
        } finally {
            setIsLoading(false);
        }
    };

    return (
        <div className="login-container">
            <h1 className="welcome-text">–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨!</h1>

            <form onSubmit={handleSubmit} className="register-form">
                {error && <p className="error-message">{error}</p>}

                <label className="label">Email</label>
                <input
                    name="email"
                    type="email"
                    className="input-field"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    required
                    disabled={isLoading}
                />

                <label className="label">–ü–∞—Ä–æ–ª—å</label>
                <input
                    name="password"
                    type="password"
                    className="input-field"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    required
                    disabled={isLoading}
                />

                <button
                    type="submit"
                    className="test-login-button"
                    disabled={isLoading}
                >
                    {isLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–í–æ–π—Ç–∏'}
                    <i className="arrow-icon">&#8594;</i>
                </button>
            </form>

            <p className="register-link">
                –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
                <Link to="/register" style={{ color: 'white', textDecoration: 'underline' }}>
                    –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å
                </Link>
            </p>
        </div>
    );
};

export default App;